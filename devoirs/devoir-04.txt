### Exercices xpath-01, Partie 2

À partir du fichier `PDV.xml`

1. L'élément racine du document
2. Tous les noeuds enfants de `<pdv>`
3. Les noeuds textes de toutes les villes
4. Le 46ième point de vente
5. Le dernier élément `<prix>` de chaque point de vente
6. Le point de vente dont l'ID est 3150005
7. Les points de vente qui ne proposent pas de "GPL"
8. Tous les noeuds frères à droite de l'élément <services>
9. La ou les ville(s) dont le code postal est 16170
10. Les points de vente qui ne sont pas ouverts le lundi
11. Les points de vente ouvrant le service "Relais colis"
12. Le ou les éléments dont le 10ième élément venant à droite a pour valeur textuelle "Piste poids lourds"
13. La ou les ville(s) dont le point de vente a été en rupture de "SP95" le 04 février 2013
14. Tous les points de vente qui n'ont pas connu de fermeture
15. Est-ce que la ville de La Mure propose du carburant E10 ? Écrire la requête.
16. Combien existe t-il de points de vente ?
17. Écrire une expression pour compter la longueur de la chaîne de caractères des éléments `<adresse>`
18. Reprendre cette expression et trouver la valeur maximale
19. Selectionner les points de vente qui ne ferment pas à `20:00`
20. Afficher le nom des différents carburants proposés en minuscule
21. Remplacer le point contenu dans l'attribut `latitude` par `--` (Attention, il faudra échaper le point)
22. Inverser la date et l'heure dans les attributs `maj`, et changer le séparateur par `T` (t majuscule)

	# Réponses

1. pdv_liste
2. //pdv/child::*
3. //ville/text()
4. //pdv[46]
5. //pdv/prix[last()]
6. //pdv[@id=3150005]
7. //pdv[not(services/service="GPL")]
8. //services/following-sibling::*
9. //pdv[@cp=16170]/ville
10. //pdv[ouverture/@saufjour="Lundi"]
11. //pdv[services/service="Relais colis"]
12. //*[text()="Piste poids lourds"]/preceding-sibling::*[10]
13. //ville[../rupture[@nom="SP95" and contains(data(@début),"2013-02-04")]]
14. //pdv[not(fermeture) or fermeture[not(text()|*|@*)]]
15. //*[lower-case(ville)="la mure" and prix[@nom="E10"]]
16. count(//pdv)
17. //adresse/fn:string-length()
18. max(//adresse/fn:string-length())
19. //pdv[ouverture[@fin!="20:00"]]
20. //prix/lower-case(@nom)
21. //pdv/replace(@latitude,"\.", "--")
22. //prix/replace(@maj,"([0-9]{4}-[0-9]{2}-[0-9]{2}) ([0-9]{2}:[0-9]{2}:[0-9]{2})", "$2T$1")


### Exercices xpath-02

En repartant du fichier `juicers.html`

1. Créer une séquence contenant les `juicer` de type centrifugeuse
2. Sélectionner la dernière machine (= dernier `juicer`) à partir de cette séquence
3. Supprimer la deuxième machine de cette séquence
4. Créer une séquence du nom des machines, la séquence doit contenir des chaînes de caractères
5. Afficher la position de la machine ayant pour nom `Juiceman Jr.`
6. Créer une séquence avec les noeuds contenant le nom des machines
7. Afficher la position du noeud contenant une balise `name` ayant pour valeur `Juiceman Jr.`
8. Créer une séquence d'entier allant de 5 à 25 (Note : ne fonctionne que pour des entiers)
9. Afficher tous les multiples de 5 de cette séquence

	# Réponses

1. (//juicer[@type="centrifugal"])
2. (//juicer[@type="centrifugal"])[last()]
3. (//juicer[@type="centrifugal"])[position()!=2]
4. (//name/text())
5. count(//juicer[name="Juiceman Jr."]/preceding-sibling::*) + 1
6. (//name)
7. idem 5
8. (5 to 25)
9. (5 to 25)[. mod 5 = 0]